import type { Meta, StoryObj } from '@storybook/react';
import { 
  Modal, 
  ModalControl,
  ModalDialog
} from '../../components/library/components/modal/Modal';
import { ModalContext } from '../../components/library/components/modal/ModalContext';
import { ModalProps } from '../../components/library/components/modal/Modal';

interface ExtendedModalProps extends ModalProps {
  modalDialog?: {
    customClass?: string;
    position?: 'fixed' | 'absolute';
    role?: 'dialog' | 'alertdialog';
    hasBackdrop?: boolean;
  }
}

const meta: Meta<ExtendedModalProps> = {
  title: 'Components/Modal',
  component: Modal,
  parameters: {
    layout: 'centered',
  },
  tags: ['autodocs'],
  argTypes: {
    modalId: { control: 'text' },
    open: { control: 'boolean' },
    
    // Modal Dialog subcomponent controls
    modalDialog: {
      customClass: { control: 'text' },
      position: { control: 'radio', options: ['fixed', 'absolute'] },
      role: { control: 'select', options: ['dialog', 'alertdialog'] },
      hasBackdrop: { control: 'boolean' },
    },
  },
  args: {
    open: false,
    modalDialog: {
      position: "fixed",
      role: "dialog",
      hasBackdrop: true
    },
  },
  subcomponents: {ModalControl, ModalDialog}
};

export default meta;
type Story = StoryObj<ExtendedModalProps>;

export const Default: Story = {
  args: {
    ...meta.args, // not needed
    modalId: 'def-modal',
    modalDialog: {
      customClass: 'def-modal'
    }
  },

  render: (args) => {

    // Separate subcmop. - modalDialog args from args
    const { modalDialog, ...modalProps } = args;
    
    return (
      <Modal {...modalProps}>
        <ModalControl />

        <ModalContext.Consumer>
          {(context) => {
            if (!context) return null;
            const { closeDialog } = context;
            return (
              <ModalDialog {...modalDialog}>
                <section className='c-modal__header'>
                  <button type='button' className='c-modal__header-close' aria-label='close' onClick={closeDialog} ></button>
                  <h2 className='c-modal__header-title' id={args.modalId + '-title'}>Sample Modal</h2>
                </section>
                <section className='c-modal__body'>
                  Lorem Ipsum
                </section>
                <section className='c-modal__footer'>
                  <button type='button' aria-label='Cancel' onClick={closeDialog} >Cancel</button>
                  <button type='button' aria-label='Submit' onClick={closeDialog} >Submit</button>
                </section>
              </ModalDialog>
            );
          }}
        </ModalContext.Consumer>
      </Modal>
    )
  }
};